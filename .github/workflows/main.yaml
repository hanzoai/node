on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/main.yaml"
      - "Cargo.*"
      - "hanzo-libs/**"
      - "hanzo-bin/**"

  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - ".github/workflows/main.yaml"
      - "Cargo.*"
      - "hanzo-libs/**"
      - "hanzo-bin/**"

name: Hanzo Test Workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download tools from store to pre-install folder
        run: |
          ./scripts/update_tools.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push testing image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .github/Dockerfile
          push: true
          tags: ghcr.io/hanzoai/node/testing:${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}

  test-primitives:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run tests primitives cargo tests
        run: docker run --rm --name hanzo_node_tests_prim_${{ github.sha }}_${{ github.run_number }}_${{ github.run_attempt }} ghcr.io/hanzoai/node/testing:${{ github.sha }} /bin/bash -c "cd /app/hanzo-libs/hanzo-message-primitives && cargo test -- --test-threads=1 --nocapture"

  test-main:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    environment: FROM_WALLET_PRIVATE_KEY
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run tests main cargo tests
        env:
          X402_PAY_TO: ${{ secrets.X402_PAY_TO }}
          X402_PRIVATE_KEY: ${{ secrets.X402_PRIVATE_KEY }}
          RESTORE_WALLET_MNEMONICS_NODE2: ${{ secrets.RESTORE_WALLET_MNEMONICS_NODE2 }}
          FROM_WALLET_PRIVATE_KEY: ${{ secrets.FROM_WALLET_PRIVATE_KEY }}
        run: docker run --rm --name hanzo_node_tests_main_${{ github.sha }}_${{ github.run_number }}_${{ github.run_attempt }} -e X402_PAY_TO="${{ secrets.X402_PAY_TO }}" -e X402_PRIVATE_KEY="${{ secrets.X402_PRIVATE_KEY }}" -e RESTORE_WALLET_MNEMONICS_NODE2="${{ secrets.RESTORE_WALLET_MNEMONICS_NODE2 }}" -e FROM_WALLET_PRIVATE_KEY="${{ secrets.FROM_WALLET_PRIVATE_KEY }}" ghcr.io/hanzoai/node/testing:${{ github.sha }} /bin/bash -c "export IS_TESTING=1 && export SKIP_IMPORT_FROM_DIRECTORY=true && export WELCOME_MESSAGE=false && cd /app && cargo test -- --test-threads=1 --nocapture --skip node_integration_tests --skip a3_micropayment_flow_tests --skip a4_micropayment_localhost_tests"

  test-integration:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    environment: FROM_WALLET_PRIVATE_KEY
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run integration tests
        env:
          X402_PAY_TO: ${{ secrets.X402_PAY_TO }}
          X402_PRIVATE_KEY: ${{ secrets.X402_PRIVATE_KEY }}
          RESTORE_WALLET_MNEMONICS_NODE2: ${{ secrets.RESTORE_WALLET_MNEMONICS_NODE2 }}
          FROM_WALLET_PRIVATE_KEY: ${{ secrets.FROM_WALLET_PRIVATE_KEY }}
        run: docker run --rm --name hanzo_node_integration_tests_${{ github.sha }}_${{ github.run_number }}_${{ github.run_attempt }} -e X402_PAY_TO="${{ secrets.X402_PAY_TO }}" -e X402_PRIVATE_KEY="${{ secrets.X402_PRIVATE_KEY }}" -e RESTORE_WALLET_MNEMONICS_NODE2="${{ secrets.RESTORE_WALLET_MNEMONICS_NODE2 }}" -e FROM_WALLET_PRIVATE_KEY="${{ secrets.FROM_WALLET_PRIVATE_KEY }}" ghcr.io/hanzoai/node/testing:${{ github.sha }} /bin/bash -c "export IS_TESTING=1 && export SKIP_IMPORT_FROM_DIRECTORY=true && export WELCOME_MESSAGE=false && cd /app && cargo test -- --test-threads=1 --nocapture node_integration_tests a3_micropayment_flow_tests a4_micropayment_localhost_tests"

  cleanup:
    runs-on: ubuntu-latest
    needs: [test-primitives, test-main, test-integration]
    if: always()
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Remove image from registry
        run: |
          echo "Cleanup completed - image will be garbage collected by GitHub"
